1
00:00:00,700 --> 00:00:08,400
BioC Asia の 2 日目へようこそみなさん。今日開始する前に

2
00:00:08,400 --> 00:00:14,000
私が居る土地の伝統的な所有者と管理人を祝福し、感謝したいと思います。

3
00:00:14,000 --> 00:00:19,500
ここオーストラリア メルボルンではクリン民族の人たちがその人たちに相当します。

4
00:00:19,500 --> 00:00:24,234
私は彼らの過去と現在の年配の方たちに敬意を表し、この場所への彼らの継続的な(思想の)つながりを受け入れます。

5
00:00:25,034 --> 00:00:29,667
また、人々が参加している他のコミュニティの年配の方たちにもこの敬意を表したいと思います。

6
00:00:29,667 --> 00:00:36,867
主権の座には就いていませんがここは常にアボリジニの土地です。

7
00:00:38,867 --> 00:00:45,734
今日は、Bioconductor のコアチームからのいくつかの講演から始めます。

8
00:00:45,734 --> 00:00:56,467
そんなわけで Lori Shepherd と Nitesh からです。 Lori のトークはビデオ録画物になります。

9
00:00:57,267 --> 00:01:03,267
そしてそれは日本語の字幕を持っており、日本語話者も話を追えるようになっています。

10
00:01:04,534 --> 00:01:12,000
またこのトークをよりアクセシブルにしようと思い、

11
00:01:12,000 --> 00:01:18,000
私は一時的に日本語に切り替えを行いたいと思います。発音についてはご容赦ください。

12
00:01:56,360 --> 00:02:02,360
こんにちは、みなさん。 BioC Asia 2021を楽しんでいらっしゃることと思います。

13
00:02:02,360 --> 00:02:06,920
本日は、カンファレンスの主催者から講演の招待をいただきありがとうございます。

14
00:02:06,920 --> 00:02:13,400
これはライブトークではありませんが私の初めてのキーノートトークでありとてもわくわくしています。今日の私のトークはBioconductorについてです。

15
00:02:13,400 --> 00:02:19,240
Bioconductorとは何か、そしてそのコアチームがBioconductorというプロジェクトをどのように支援しているかを紹介します。

16
00:02:19,240 --> 00:02:24,200
私が一般的なRおよびコンピューティングの会議に参加し始めたときに最初に驚いたのは、Bioconductorが単一のRパッケージであるという誤解でした。

17
00:02:24,200 --> 00:02:30,600
Bioconductorプロジェクトは、単一のパッケージではなく、それよりはるかに大きいものです。

18
00:02:30,600 --> 00:02:37,000
Bioconductorは、オープンソースおよびオープン開発のRパッケージリポジトリシステムです。

19
00:02:37,000 --> 00:02:43,480
それは遺伝学およびゲノミクスデータの分析、理解、および視覚化を中心に扱っています。

20
00:02:43,480 --> 00:02:48,680
Bioconductorには現在2000を超えるパッケージがあります。

21
00:02:48,680 --> 00:02:52,840
加えて専門的な実験やアノテーションのデータやワークフローもあります。それらはBioconductorのインターフェースを通じて利用できます。

22
00:02:54,200 --> 00:02:59,080
ただし、Bioconductorは単なるパッケージリポジトリシステムではありません。

23
00:02:59,080 --> 00:03:04,040
それは真に巧妙に築き上げられた組織です。多くの人が関わりプロジェクトの方向性を決めています。

24
00:03:04,040 --> 00:03:08,920
現在、「科学」「技術」「コミュニティ」の3つの主要な諮問委員会があります。

25
00:03:08,920 --> 00:03:13,880
科学諮問委員会は招待されたメンバーのみの委員会です。

26
00:03:13,880 --> 00:03:19,320
それはプロジェクトの科学的方向性に関する外部の助言と監視を提供します。

27
00:03:19,320 --> 00:03:23,320
一方コミュニティ諮問委員会は毎年春に委員会に加わるためのオープンな公開投票によって選出されます。

28
00:03:23,960 --> 00:03:28,440
技術諮問委員会はプロジェクトおよびパッケージレベルのインフラストラクチャについてアドバイスします。

29
00:03:28,440 --> 00:03:33,880
一方、コミュニティ諮問委員会はBioconductorコミュニティの発展、強化、および多様化に取り組んでいます。

30
00:03:33,880 --> 00:03:39,560
誰でもこれらの2つの委員会のポジションに立候補することができます。

31
00:03:39,560 --> 00:03:43,720
技術委員会の場合は、Bioconductorとプログラミングの知識や

32
00:03:43,720 --> 00:03:49,400
専門的な科学技術の背景があると便利かもしれません

33
00:03:49,400 --> 00:03:55,160
コミュニティ委員会は特に、人種、民族、教育レベルそしてBioconductorの経験の組み合わせを目指して、可能な限り多様化を図りたいと考えています。

34
00:03:55,160 --> 00:03:59,480
興味がある場合は、

35
00:03:59,480 --> 00:04:03,080
春先にBioconductorのサポートサイトとコミュニティSlackチャンネルで志願の募集を探してください。

36
00:04:05,320 --> 00:04:10,440
Bioconductorは単なる単一のパッケージではなくそれ以上のものであるという話に戻りましょう。

37
00:04:10,440 --> 00:04:15,960
Bioconductorはパッケージリポジトリであり組織でもありますが、さらに重要なのは、おそらく最も重要なことですが

38
00:04:15,960 --> 00:04:21,240
コミュニティであるということです。そのためBioconductorは次の目的のためにリソースやインフラを提供しようとがんばっています。

39
00:04:21,240 --> 00:04:26,040
それは経験豊富なパッケージメンテナ、開発者、およびユーザーを、

40
00:04:26,040 --> 00:04:31,000
経験の浅い人々とリンクさせ、この協力的で歓迎的なコミュニティを育成するためです。

41
00:04:31,000 --> 00:04:36,520
ではBioconductorユーザーはどのように、どこでコミュニティとつながるのでしょうか?

42
00:04:36,520 --> 00:04:42,760
それにはいくつかの異なる場所があります。注目すべきはBioconductorのサポートサイトとコミュニティSlackチャンネルそして

43
00:04:42,760 --> 00:04:47,960
数多く存在するカンファレンスワークショップとトレーニングイベントです。ワークショップとイベントは年を通じて起こっています。

44
00:04:47,960 --> 00:04:53,240
また新しく展開されたメンターシッププログラムもあります。私は今あなたにそれらそれぞれを簡単に說明できます。

45
00:04:55,320 --> 00:04:59,880
Bioconductorのサポートサイトは多くのユーザーが行く最初の場所です。

46
00:04:59,880 --> 00:05:05,000
そこではBioconductorパッケージを用いた解析やトラブルシュートの質問をし、アドバイスをもらいます。

47
00:05:05,000 --> 00:05:09,480
このサポートサイトはBioconductorパッケージの質問に特化しています。そしてBioconductorにパッケージを提出したすべてのメンテナーは

48
00:05:09,480 --> 00:05:15,080
サポートサイトにサインアップする必要があります。もしメンテナーのパッケージ名でタグ付けされた質問が来たら

49
00:05:15,080 --> 00:05:19,880
メンテナーにはその通知が来るようになっています。サポートサイトには何千人ものユーザーがいます。

50
00:05:19,880 --> 00:05:26,120
サポートサイトはコミュニティの知識と経験を活用するための優れたリソースになりえます。パッケージのタグをクリックすると検索ができます。

51
00:05:26,120 --> 00:05:31,560
またはタグのタブに移動してパッケージを検索することもできます。そして既存の投稿や質問を見ることができます。

52
00:05:32,120 --> 00:05:36,120
もしあなたが必要とするものに関係のある何かが見つからなければ

53
00:05:36,120 --> 00:05:41,640
あなたは新しい質問を投稿できます。ask a questionタブをクリックすることでそれができます。

54
00:05:41,640 --> 00:05:46,840
有益なタイトルと質問に関連するパッケージのタグを投稿に付けるようにしてください。

55
00:05:47,720 --> 00:05:54,360
本文には Markdown もしくはプレーンテキストまたはHTMLを使用します。もし問題、コード実行のエラーがある場合

56
00:05:54,360 --> 00:05:59,640
できるだけ多くのコード例をコードセクションに含めてください。また必ずプラットフォームの情報、

57
00:05:59,640 --> 00:06:04,280
RとBioconductorのバージョンも含めてください。すると我々が回答を適切に調整できるので。

58
00:06:04,920 --> 00:06:10,040
Bioconductorチームはニュース機能を使って重要なアナウンスを投稿します。

59
00:06:10,040 --> 00:06:14,840
それはリリース、パッケージ、カンファレンス、選挙、およびその他のニュースイベントのためのものです。

60
00:06:16,840 --> 00:06:21,560
BioconductorコミュニティのSlackチャンネルもあります。私はみなさんにそのチャンネルに参加することをおすすめします。

61
00:06:21,560 --> 00:06:26,520
そこには多くの特定の議論に役立つチャンネルがあります。

62
00:06:26,520 --> 00:06:32,920
例えばマイクロバイオーム、メタボロミクス、プロテオミクスといったようなチャンネルがあります。

63
00:06:33,560 --> 00:06:37,560
後で説明するコアインフラストラクチャの部分について質問するチャネルもありますが、

64
00:06:37,560 --> 00:06:43,080
ビルドシステムの質問用のbioc-buildsや、

65
00:06:43,080 --> 00:06:50,280
experimenthub、annotationhub、またはbiocfilecacheの質問用のbiochubsなどのチャネルもあります。

66
00:06:50,280 --> 00:06:55,080
年間を通じて多くのカンファレンス、ワークショップ、トレーニングイベントがあります。

67
00:06:55,080 --> 00:07:00,760
メインのウェブサイトにはBioconductorイベントカレンダーがあり、誰でもBioconductor関連のイベントを送信して宣伝できます。

68
00:07:00,760 --> 00:07:08,520
events@bioconductor.org に電子メールを送信するか

69
00:07:08,520 --> 00:07:14,360
まもなく利用可能になるフォーム版で、誰でもウェブページに含めるイベントを送信できます。

70
00:07:14,360 --> 00:07:19,240
イベントの最小要件はBioconductorとの関連性、およびBioconductor行動規範を守ることです。

71
00:07:20,120 --> 00:07:25,320
カンファレンスは常に楽しい時であり、コミュニティやネットワークの他のメンバーと会うための素晴らしい方法です。

72
00:07:25,320 --> 00:07:30,120
毎年恒例のイベントとなっている、このBioCAsiaを楽しんでいただければ幸いです。

73
00:07:30,680 --> 00:07:36,440
また、夏の終わりに米国で通常開催されるメインのBioCカンファレンスと、

74
00:07:37,160 --> 00:07:43,560
毎年恒例のEuroBioCカンファレンスがあり、現在予定されている次のカンファレンスは2022年3月です。

75
00:07:44,280 --> 00:07:49,800
近年、他の国でもBioconductorのイニシアチブが見られることに興奮しています。

76
00:07:49,800 --> 00:07:55,800
Bioconductorはその代表者をバイオインフォマティクスソフトウェア開発者のコミュニティの一部に喜んで送っています。

77
00:07:55,800 --> 00:08:02,200
具体的には毎年1週間にわたるメキシコとラテンアメリカの

78
00:08:02,200 --> 00:08:06,520
スペイン語でのカンファレンスやワークショップですとか

79
00:08:06,520 --> 00:08:15,160
ワークショップやウェビナーのシリーズとして立ち上げられたH3ABioNetそしてH3Africaに代表者を送っています。

80
00:08:15,160 --> 00:08:20,840
アフリカの人がコーディングや研究を促進するのを助けるものです。

81
00:08:21,640 --> 00:08:26,120
これらはBioconductorが加わっている多くのワークショップやウェビナーそしてトレーニングの機会のほんの一部です。

82
00:08:26,120 --> 00:08:30,760
それらは年間を通じて世界中で立ち上げられており、

83
00:08:30,760 --> 00:08:36,360
Bioconductorコミュニティが成長し、私たちがワールドワイドな研究の一部になれていることに本当に興奮しています。

84
00:08:38,920 --> 00:08:42,920
ところでそれらはコミュニティとつながるすばらしいリソースですが、

85
00:08:42,920 --> 00:08:47,640
ちょっと前の組織のスライドに戻りたいと思います。なぜなら私たちはその最後のエントリーであるコアチームをスキップしたので。

86
00:08:47,640 --> 00:08:53,000
コアチームは、プロジェクトの機能において重要な役割を果たします。

87
00:08:53,000 --> 00:08:58,040
それは小さな特化された開発者のグループで、コアパッケージとプロジェクトレベルのインフラストラクチャの開発、保守、強化を支援します。

88
00:08:58,040 --> 00:09:03,320
それが本当に意味していることはどのようなことでしょうか? ほとんどの人は次のように考えていると思います。

89
00:09:03,320 --> 00:09:08,440
「コアチームはコアパッケージとパッケージメンテナンスだけ管理している」と。しかし実際には我々は

90
00:09:08,440 --> 00:09:14,120
それよりもっと多くのことを行っています。私たちはBioconductorがプロジェクトであることについて話しました。そこには多くのインフラストラクチャの要素があります。

91
00:09:14,120 --> 00:09:18,520
それらはプロジェクトを機能させるためにあります。それではそのリソースについて考えてみましょう。

92
00:09:18,520 --> 00:09:22,920
私たちは今しがたコアインフラストラクチャがコアチームが保守しているものに含まれることを見直しました。

93
00:09:25,320 --> 00:09:30,840
そんなわけでまずコアチームが更新と維持を行う責任があるものとしてメインのウェブサイト bioconductor.org があります。

94
00:09:30,840 --> 00:09:35,080
ウェブサイトは完全にコードベースで

95
00:09:35,080 --> 00:09:39,640
約20分毎に再生成され、常に最新の情報が確認できるようになっています。

96
00:09:40,280 --> 00:09:45,240
同様にサポートサイトのウェブサイトもコードベースです。ありがたいことに私たちは

97
00:09:45,240 --> 00:09:50,280
サポートサイトのモデルとしたBiostars、特にNatay Aberraからのサポートと助けを得ています。

98
00:09:50,280 --> 00:09:55,080
ですがサポートサイトの維持とメンテナンスにはコアチームが関与しています。

99
00:09:55,800 --> 00:09:59,000
またコミュニティSlackチャンネルに現れる質問を監視・解決してもいます。

100
00:09:59,000 --> 00:10:04,360
多くの場合に問題、コメント、懸念のフォローアップや調査につながっています。

101
00:10:05,160 --> 00:10:09,480
また、多くのコアチームメンバーがカンファレンスやワークショップの資料のプレゼンに参加しています。

102
00:10:10,040 --> 00:10:15,080
普通のカンファレンスのコンポーネントに関与している場合もあります。例えばワークショップをホストするための専用のウェブページですとか

103
00:10:15,080 --> 00:10:20,760
参加者のためのコンピューター環境を用意するなどです。そんな具合にもコアチームは

104
00:10:20,760 --> 00:10:27,160
管理や促進を助けています。そんなわけでみなさんはもうバックエンドのインフラストラクチャの重要性をお分かりになられたかと思います。

105
00:10:27,160 --> 00:10:33,000
続いて、ユーザーと開発者の2つの視点からBioconductorについて考えていきたいと思います。

106
00:10:33,000 --> 00:10:37,160
これまでに私たちは付加的な重要なプロジェクトインフラについて議論してきました。

107
00:10:37,160 --> 00:10:42,520
それはコアチームがコミュニティにいい体験を提供するために維持と強化の発展を支援しているものです。

108
00:10:45,400 --> 00:10:49,960
それではユーザーがどのようにBioconductorとインタラクトするか考えてみましょう。

109
00:10:49,960 --> 00:10:55,000
従来ほとんどのユーザーはターミナルやRStudioを使っていたかと思います。それらは依然としてとても人気があり

110
00:10:55,000 --> 00:11:00,200
広く利用されていますが、より新しい利用可能なテクノロジーとプロジェクトがあります。たとえばDockerイメージですとか

111
00:11:00,200 --> 00:11:04,360
クラウドベースの新たな取り組みです。AnVILプロジェクトはターミナルやRStudioとは異なるユーザーエクスペリエンスを実現するものです。

112
00:11:04,920 --> 00:11:10,040
ターミナルやRStudioのユーザー用にはCRANパッケージのBiocManagerがあります。

113
00:11:10,040 --> 00:11:15,640
それはCRANからインストールできすべてのBioconductorとCRANパッケージへのアクセスを提供します。

114
00:11:15,640 --> 00:11:22,600
Analysis Visualization and Informative Lab-spaceの略であるAnVILはNHGRI(訳注: 米国国立ヒトゲノム研究所)のプロジェクトです。

115
00:11:22,600 --> 00:11:27,320
それは分析用の安全なクラウドベースのコンピューティング環境を提供します。

116
00:11:27,320 --> 00:11:32,440
ここではAnVILとDockerイメージについて詳しくは説明しませんが、みなさんには次のNiteshのトークに参加されることをお勧めします。

117
00:11:32,440 --> 00:11:36,920
そこではAnVILのコンセプトやリソースがカバーされていると思います。私の方ではAnVILについて次のことだけ述べます。

118
00:11:36,920 --> 00:11:40,920
それはAnVILのBioconductorパッケージは異なるインストール機能をもたらすということです。

119
00:11:40,920 --> 00:11:47,000
それは Bioconductor の Docker イメージと AnVIL の計算環境で使うことに特化してデザインされています。AnVILの計算環境は

120
00:11:47,000 --> 00:11:52,680
それは高速なバイナリパッケージのインストール方法を実現しています。なぜこれが重要かというといくつかのパッケージはコンパイルを必要とするからです。

121
00:11:52,680 --> 00:11:58,760
コンパイルには時間がかかりますが、バイナリパッケージはコンパイル済みなのでほぼ一瞬でインストールできるようになります。

122
00:11:58,760 --> 00:12:03,640
ただバイナリパッケージの制約はそのシステム構成に特化されているということです。

123
00:12:03,640 --> 00:12:06,840
それはバイナリパッケージが作られた環境でしか動きません。そんなわけでバイナリパッケージはDockerを用いた環境でしか利用できません。

124
00:12:10,600 --> 00:12:16,280
ユーザー、特に新規ユーザーにとってのもう1つの重要な概念は、関心のあるパッケージを見つける方法です。

125
00:12:16,280 --> 00:12:21,000
BiocManagerには、利用可能なすべてのパッケージのリストを表示する機能があります。

126
00:12:21,000 --> 00:12:26,680
または、検索語を使用してパッケージを見つけることもできます。ですがそれは事前知識を想定しています。

127
00:12:26,680 --> 00:12:31,800
biocViews ページとパッケージライディングページは、パッケージを見つけるのに非常に役立ちます。

128
00:12:32,520 --> 00:12:37,640
bioconductor.org ホームページから離れます。利用可能なソフトウェアパッケージへのリンクがあります。

129
00:12:37,640 --> 00:12:43,400
このリンクは私たちが「biocViews」と呼んでいるページへあなたを連れていきます。そしてそれは「software」「annotation」「experiment」

130
00:12:43,400 --> 00:12:48,920
加えて「workflow」パッケージを含んでいます。「books」パッケージという近日登場予定のカテゴリもあります。興味のある用語でもパッケージを検索できます。

131
00:12:48,920 --> 00:12:54,600
例えば single cell や proteomics といったものでパッケージのリストを取得できます。またもしあなたがパッケージ名を知っているなら

132
00:12:54,600 --> 00:12:58,920
それを明確に検索できます。例えば「GenomicRanges」や「SummarizedExperiment」といったように。

133
00:12:59,720 --> 00:13:05,240
「Rank」の順は最もダウンロードされたものからわずかにしかダウンロードされていないものへの順になっています。パッケージ名をクリックすると

134
00:13:05,240 --> 00:13:10,840
Bioconductorのパッケージランディングページへ導かれます。そのページはパッケージの健全性などを示すバッジを持っています。

135
00:13:10,840 --> 00:13:17,320
またパッケージについての情報も持っています。例えば説明、ドキュメンテーション、

136
00:13:17,320 --> 00:13:22,920
パッケージ依存、または逆依存といったものです。また最後尾にはBiocManagerを使わずにパッケージを直接ダウンロードするためのリンクと

137
00:13:22,920 --> 00:13:30,040
git.bioconductor.org 中のコードベース、そしてパッケージダウンロード統計にアクセスするためのリンクがあります。

138
00:13:30,040 --> 00:13:36,120
このページでおそらくもっとも有用なのはパッケージのドキュメンテーションです。

139
00:13:36,120 --> 00:13:42,840
それはユーザーがパッケージをダウンロードする前にざっと目を通し、そのパッケージがユーザーの解析のタイプに合っているかを確認できるようになっています。

140
00:13:43,480 --> 00:13:47,240
それでは開発者の視点にスイッチする前に、

141
00:13:47,240 --> 00:13:51,720
コアチームと、ユーザーにとってどんな類のインフラがバックグラウンドで必要とされるかを再検討してみましょう。

142
00:13:52,280 --> 00:13:57,800
そこには明らかにいくつかのパッケージメンテナンス作業があります。 BiocManager に関するもの、AnVIL 固有のもの、

143
00:13:57,800 --> 00:14:04,040
biocViewsのパッケージに関するものといったようにです。すべてのBioconductorパッケージにはデイリービルドの概念があります。

144
00:14:04,040 --> 00:14:09,880
そのためパッケージはBiocManager::install関数で利用できるようになっているのです。

145
00:14:09,880 --> 00:14:15,400
Docker イメージの生成と維持もあります。 Bioconductor のDocker イメージは release と develop ブランチの両方のものがあり、

146
00:14:15,400 --> 00:14:19,560
さらには AnVIL プラットフォームに提出する必要がある AnVIL 固有の Docker イメージがあります。

147
00:14:20,600 --> 00:14:25,320
また AnVIL::install を使って提供されるパッケージのバイナリパッケージ生成もあります。

148
00:14:25,320 --> 00:14:29,880
その上ウェブサイトのコードとウェブサイトのインタラクションもあります。

149
00:14:29,880 --> 00:14:35,160
それによってあなたは biocViews のパージとパッケージランディングページを見ることができているわけです。

150
00:14:35,160 --> 00:14:39,560
また定期的なウェブサイトの再生成は、その情報を時代遅れにせず最新状態で居続けることを確かにしています。

151
00:14:40,440 --> 00:14:44,440
また、パッケージのランディングページの最後尾で簡単に説明しましたが、

152
00:14:44,440 --> 00:14:49,960
パッケージごとに算出されるダウンロード統計もあります。繰り返しになりますが

153
00:14:49,960 --> 00:14:55,080
些細で基本的な機能に見える一方で

154
00:14:55,080 --> 00:14:59,320
すべてが適切に機能し適切にインタラクトするには、舞台裏で行う必要のあることが大量にあることがお分かりになるかと思います。

155
00:15:02,040 --> 00:15:06,680
コアチームはあるパッケージのサブセットを持っています。それは「コアパッケージ」と考えられ、

156
00:15:06,680 --> 00:15:11,320
「コアチームによってメンテされている」ものです。ですがBioconductorのほとんどのパッケージはコミュニティの貢献によるものです。

157
00:15:11,880 --> 00:15:16,200
コミュニティの誰もが Bioconductor パッケージを開発して提出することを歓迎します。

158
00:15:16,200 --> 00:15:20,520
開発時に実装する必要がある特定のパッケージ要件があり、パッケージはレビュープロセスを受けます。
パッケージを開発する場合いくらかの必要条件があります。

159
00:15:20,520 --> 00:15:24,840
そしてパッケージはレビュープロセスに経ます。一旦パッケージがアクセプトされると、

160
00:15:24,840 --> 00:15:29,320
それはデイリービルダーに追加され、BiocManagerを使ってインストールできるようになります。

161
00:15:31,720 --> 00:15:37,160
パッケージの必要条件は contributions.bioconductor.org で見つけることができます。

162
00:15:37,160 --> 00:15:42,120
また メインウェブサイトの developer セクションでも見つけることができます。

163
00:15:42,120 --> 00:15:47,480
現在 そのウェブサイトの developer セクションから contributions.bioconductor.org に情報を動かしている最中です。

164
00:15:47,480 --> 00:15:50,440
ですので最終的にすべての情報は1カ所にあるようになります。

165
00:15:51,400 --> 00:15:56,200
パッケージを開発する時に実装する義務があるいくつかのキーコンセプトを見直してみましょう。

166
00:15:57,000 --> 00:16:02,520
重要なことの1つは再利用もしくは既存クラスの拡張そして

167
00:16:02,520 --> 00:16:08,280
特定のデータタイプ用のimportとexportのメソッドがよく開発されているものを使うことです。Bioconductor は相互運用性の概念を持っており、

168
00:16:08,280 --> 00:16:13,640
そのためあるユーザーが1つのパッケージを使い、異なるパッケージでノーマライズを行い、3つ目で可視化を行いたい場合、

169
00:16:13,640 --> 00:16:19,800
1つのパッケージから次のパッケージへのデータの操作は、もし完全に排除されていないなら最小限に留めるべきです。

170
00:16:19,800 --> 00:16:25,800
理想的には一方のパッケージの出力がもう一方のパッケージへの入力であるべきです。

171
00:16:25,800 --> 00:16:32,200
これが、私たちが既存のクラス構造の使用または拡張を強調したい理由です。

172
00:16:32,200 --> 00:16:38,200
言及する価値がある別のグッドプラクティスは、可能ならウェブベースデータのキャッシュを作ることです。これはあるユーザーがインターネットが使えない、もしくは

173
00:16:38,200 --> 00:16:44,600
あるウェブサイトから同じファイルにリクエストする、もしくはウェブサイトが一時的に利用できない場合に

174
00:16:44,600 --> 00:16:50,120
再ダウンロードの必要が無く、前にダウンロードしたバージョンを

175
00:16:50,120 --> 00:16:56,760
インターネットの復帰やデータの再ダウンロードを待つことなく使えるようにする可能性を秘めています。さらに別のグッドプラクティスはユニットテストの実装です。

176
00:16:56,760 --> 00:17:02,120
テストは面倒に思えるかもしれませんがそれを強くお勧めします。もしテストを開発プロセスに早めに追加すると

177
00:17:02,120 --> 00:17:07,800
それは意外と開発に役立ち得ます。そんなわけでエッジケースなどをテストしたり

178
00:17:07,800 --> 00:17:14,360
ポジ・ネガの両方のテストをしたりすると正常な機能を確保できます。

179
00:17:14,360 --> 00:17:19,720
加えてBioconductorが要求する大きなことは、実行可能な例を伴う実に詳細な vignette です。

180
00:17:19,720 --> 00:17:25,320
vignette はパッケージがビルドされる時にコンパイルされます。そのため、 vignette はコードが適切に機能するかを保証するのにも役立ちます。

181
00:17:25,320 --> 00:17:31,240
理想的には vignette がユーザーにそのパッケージとその固有の機能の理解を与えてくれるので、私たちは詳細な vignette を好みます。

182
00:17:31,240 --> 00:17:36,280
これらはあなたが contributions.bioconductor.org ページで見つけるであろう多くのコンセプトの内のほんの一部にすぎません。

183
00:17:36,280 --> 00:17:43,320
ひとまずパッケージが開発されるとユーザーは

184
00:17:43,320 --> 00:17:48,680
GitHub上のBioconductorの新投稿トラッカーにそれを投稿します。そのホームページにはいくつかの有用な情報があります。

185
00:17:48,680 --> 00:17:53,160
それは何を期待するか、ですとか どのように関連するもしくは依存するパッケージをどのように投稿するか、といったものです。

186
00:17:53,160 --> 00:17:59,240
新しいイシューを投稿するには、 Bioconductor/Contributions 下で「New issue」開くように移動してください。

187
00:17:59,240 --> 00:18:05,480
そのタイトルはあなたのパッケージ名である必要があります。すべてのパッケージは今のところGitHubのリポジトリの配置が必要です。

188
00:18:05,480 --> 00:18:10,840
そしてその場を指しつつリンク先のリポジトリが更新される必要があります。そしてパッケージがモデレーション段階待ちになります。

189
00:18:11,400 --> 00:18:16,760
そしてレビュアーがアサインされ、そのパッケージは私たちの git.bioconductor.org の場所に追加されます。

190
00:18:16,760 --> 00:18:23,560
そして3つのメジャーOSプラットフォーム Linux Mac Windows すべてでビルドがトリガーされます。

191
00:18:23,560 --> 00:18:28,360
一度パッケージが "ERROR" が無くビルド・チェックされたら、レビュアーはそのパッケージのより詳しいレビューを行います。

192
00:18:28,360 --> 00:18:33,560
そして Bioconductor パッケージの必要条件と一致するようにコメントや提案、また変更リクエストを提示します。

193
00:18:34,200 --> 00:18:38,760
レビュープロセスはコミュニティに開かれており、そこではオープンな意見交換があります。

194
00:18:38,760 --> 00:18:44,760
またそれは Bioconductor の行動規範によって統治されています。一旦パッケージがアクセプトされるとそれはナイトリーデイリービルダーに追加されます。

195
00:18:46,920 --> 00:18:53,320
Bioconductor はパッケージのソースコードのバージョン管理に git を使います。

196
00:18:53,320 --> 00:18:58,600
Bioconductor は git.bioconductor.org からのみビルドされます。そしてユーザーはこの場所に変更をプッシュしそれをパッケージユーザーに伝播させる必要があります。

197
00:18:58,600 --> 00:19:05,480
週に数回から毎日程度の頻度で Bioconductor のビルダーはパッケージのあるバージョンを git clone を実行し

198
00:19:05,480 --> 00:19:10,680
その後R CMD INSTALL、R CMD build、そして R CMD check を実行します。

199
00:19:10,680 --> 00:19:17,320
もしパッケージのinstall、build、checkがきちんと進み、変更に対する有効なバージョンアップがされていれば、

200
00:19:17,320 --> 00:19:21,880
そのパッケージは伝播し、BiocManager::install 関数を使って利用できるようになります。

201
00:19:22,600 --> 00:19:26,760
パッケージのメンテナーは、メインWebサイトの右下隅にマークされた「Build reports」からビルドレポートを得ることができます。

202
00:19:26,760 --> 00:19:31,320
このページはそのビルドがどの程度の頻度で行われるかを表示します。

203
00:19:32,120 --> 00:19:38,120
ビルドレポートのいずれかをクリックすると、全 Bioconductor パッケージと

204
00:19:38,120 --> 00:19:43,320
各ステージに至るまでのステータスのリストが表示されます。
ページのトップにはそれがいつ生成されたかを示すタイムスタンプがあり、

205
00:19:43,320 --> 00:19:49,400
それぞれのパッケージは Git のコミットのバージョンとビルダーがそのレポートのために使われた日付の情報を持っています。

206
00:19:49,400 --> 00:19:55,080
何らかのステージのインジケーターをクリックしてより多くの情報と結果を見ることができます。

207
00:19:56,840 --> 00:20:01,160
それではパッケージを投稿するために今説明したすべてのものに必要なインフラストラクチャは何でしょうか?

208
00:20:01,160 --> 00:20:06,040
パッケージガイドラインの評価と更新があるでしょう。

209
00:20:06,680 --> 00:20:10,840
また GitHub でのパッケージ投稿プロセスとインタラクトするコードもあるでしょう。

210
00:20:10,840 --> 00:20:15,000
そして3つの開発ビルダーのそれぞれの新投稿プロセスに固有のコードもあるでしょう。

211
00:20:15,960 --> 00:20:19,960
コアチームは今のところ新しい投稿に対するパッケージレビューにも参加しています。

212
00:20:21,480 --> 00:20:25,400
Bioconductor の Git のエコシステム全体の促進もあります。

213
00:20:25,400 --> 00:20:31,080
それは git.bioconductor.org や、すべての Bioconductor パッケージのメインのリポジトリの場所を含みます。

214
00:20:31,080 --> 00:20:37,240
GitContributions アプリはユーザーの ssh 証明書を管理するものです。

215
00:20:38,120 --> 00:20:44,280
Gitolite はどのユーザーがどのパッケージにアクセスできるようにするかを管理するアプリです。

216
00:20:44,280 --> 00:20:50,600
Git hooks は様々なトリガーイベントに反応するものです。また
BBS と呼ばれる Bioconductor Build System もあります。

217
00:20:50,600 --> 00:20:55,560
それはコアチームの一大仕事です。
そこでは最小限に6つのビルドマシンがあり、

218
00:20:55,560 --> 00:21:01,640
それはシステム管理と次のそれぞれをハンドルするための基本的なコードベースを必要とします。

219
00:21:01,640 --> 00:21:07,000
git clone、R CMD install、R CMD build、R CMD check、パッケージを伝播させること、そして

220
00:21:07,000 --> 00:21:12,920
ビルドレポートの生成です。そして最小限でも6つビルダーがある理由は

221
00:21:12,920 --> 00:21:19,560
Bioconductor の release と devel ブランチの両方用に、私たちは3つのOSプラットフォーム Mac、Linux そして Windowsをカバーしているからです。

222
00:21:22,280 --> 00:21:27,480
簡単に、Bioconductor に release と devel ブランチがある理由についても触れたいと思います。

223
00:21:27,480 --> 00:21:34,040
Bioconductor は R と密接に関連しています。
ほとんどの年の春に、R はリリースされます。

224
00:21:34,040 --> 00:21:38,200
その R のリリースの次に Bioconductor は更新する必要があります。どのバージョンのRがパッケージで継続して適切に機能するのを保証するためにです。

225
00:21:38,200 --> 00:21:43,960
Bioconductorには、春と秋 年に2つのリリースがあります。

226
00:21:44,600 --> 00:21:52,200
そこでは devel ブランチが「リリースされて」次の新しい release ブランチになります。ざっくりと4月末から5月始めにかけて

227
00:21:52,200 --> 00:21:57,480
新しいRのバージョンがリリースされるので、その Bioconductor の release と devel ブランチ両方は

228
00:21:57,480 --> 00:22:04,200
R の安定したバージョンもしくはパッチがあてられたバージョンを使うことになります。秋、通常は10月末か11月始めに

229
00:22:04,200 --> 00:22:09,960
Bioconductorは2番目のリリースを行います。
今のところ、その Bioconductor の release ブランチは

230
00:22:09,960 --> 00:22:16,440
引き続き安定した R と R のパッチがあたったバージョンを使います。 ですがその devel ブランチは R の devel バージョンを使うようにしています。

231
00:22:16,440 --> 00:22:22,200
次の春の R のリリースに備えるためです。devel ブランチを使用すると、メンテナーは

232
00:22:22,200 --> 00:22:28,440
base-r の変更だけでなく、被ることになるであろう他の依存パッケージの変更にも適応できるようになります。

233
00:22:28,440 --> 00:22:33,560
そしてエンドユーザーへの混乱やダウンタイムを最小限に抑えることができます。

234
00:22:33,560 --> 00:22:38,360
Bioconductor は、パッケージメンテナが開発ブランチで大きな変更を加えて、

235
00:22:38,360 --> 00:22:43,640
リリースブランチでの変更をマイナーなバグ修正に限定することを奨励しています。

236
00:22:43,640 --> 00:22:48,840
繰り返しになりますが、エンドユーザーに影響を与えることなく開発や破壊的変更を行える場所を設けたいという理由からです。

237
00:22:50,120 --> 00:22:55,000
コアチームは、リリース期間中はリリース関連のタスクで常に非常に忙しいです。

238
00:22:55,000 --> 00:23:01,560
それは最低6つのビルダーで R と Bioconductor のバージョンを更新すること、

239
00:23:01,560 --> 00:23:06,120
Bioconductorから廃止予定とされることや除去されることを避けるようにパッケージの修正を試みるためのビルド失敗の通知が無視されていることをメンテナーに伝えるeメール、

240
00:23:06,120 --> 00:23:11,720
新たに投稿されたパッケージのレビュー、

241
00:23:12,760 --> 00:23:18,280
注意を必要とするコアパッケージの修正または変更、リリース関連のアノテーションリソースの追加、

242
00:23:18,280 --> 00:23:24,680
新しいリリースのすべてのパッケージに対する git.bioconductor.org での新しいブランチの作成、

243
00:23:24,680 --> 00:23:30,840
そして、リリースアナウンスを生成するためのすべてのパッケージのNEWSファイルの照合などです。

244
00:23:32,280 --> 00:23:37,160
コアチームがメンテしている、最近人気が上昇している、また別の重要なインフラの要素があります。

245
00:23:37,160 --> 00:23:43,160
それは Bioconductor Hubs というコンセプトです。 具体的には AnnotationHub と ExperimentHub というものがあります。

246
00:23:43,160 --> 00:23:51,000
簡単な背景として、git は大きなファイルを許可せず、私たちの現在の git システムは git-lfs をサポートしていません。

247
00:23:51,000 --> 00:23:56,440
それは、ユーザーに大規模なデータセットを提供するための代替方法が必要であることを意味します。

248
00:23:57,240 --> 00:24:02,840
Bioconductorは、データを安全な公共または機関のサーバーでホストすることを主張しています。

249
00:24:02,840 --> 00:24:10,920
例えば Zenodo、Amazon S3 バケット、Microsoft Azure、他にも信頼できるサイト、もしくは

250
00:24:10,920 --> 00:24:19,000
もし可能なら GitHub や Dropbox などでデータをプライベートにホストするのではなく Ensemble や NCBI のようなウェブリソースなりデータベースへのダイレクトアクセスといったものです。

251
00:24:19,000 --> 00:24:24,600
もしあなたがパッケージを開発しているなら、私たちは他のプラットフォーム上でのデータホスティングについて議論するのをお勧めします。

252
00:24:24,600 --> 00:24:33,160
bioc-devel@r-project.org の開発者メーリングリストで議論していただけます。

253
00:24:33,800 --> 00:24:38,440
メンテナーがそのようなリソースにアクセスできない場合は、

254
00:24:38,440 --> 00:24:45,720
Bioconductor は Amazon S3 バケットを使ってもらえるようにしています。また一方で私たちは Amazon S3 から Microsoft Azure への場所の移行を積極的に調査しています。

255
00:24:45,720 --> 00:24:53,080
開発者は信頼できるサイトから直接リソースをダウンロードできますが、

256
00:24:53,720 --> 00:24:58,840
バックグラウンドでキャッシュメカニズムを実装する必要があります。

257
00:24:58,840 --> 00:25:05,640
そこで私たちは Bioconductor のコアパッケージ BiocFileCache を強くお勧めします。

258
00:25:05,640 --> 00:25:11,000
直接ダウンロードし、そしてBiocFileCacheを実装することの代替方法は、データを AnnotationHub もしくは ExperimentHub にデータを載せることです。

259
00:25:11,720 --> 00:25:16,680
AnnotationHub と ExperimentHub は、ダウンロードする外部データへの参照を持つデータベースです。

260
00:25:16,680 --> 00:25:23,560
Hub インターフェイスは、データベースにデータを含めるときに提供されるメタデータへのクエリメカニズムを提供します。

261
00:25:23,560 --> 00:25:29,560
ダウンロードに Hub インターフェイスを使う時、それはすでに

262
00:25:29,560 --> 00:25:35,800
BiocFileCache をキャッシングメカニズムとして使っています。そのためメンテナーはそれを自分で実装する必要はありません。

263
00:25:35,800 --> 00:25:41,800
Hub にデータを載せることの他の利点は、Rの外部または

264
00:25:41,800 --> 00:25:47,880
関連する Bioconductor パッケージの利用外のリソースの見つけやすさです。 Bioconductor のコアパッケージには

265
00:25:47,880 --> 00:25:52,920
ExperimentHub と AnnotationHub があり、それらは異なるタイプの、もしくは異なるソースからのデータをクエリーできます。

266
00:25:53,480 --> 00:25:58,760
リソースは、R内で実行されるクエリまたは

267
00:25:58,760 --> 00:26:04,840
annotationhub.bioconductor.org もしくは experimenthub.bioconductor.org での Hub の API を用いた調査のいずれかで検索できます。

268
00:26:06,120 --> 00:26:11,320
そのAPIは認めざるを得ないことですがまだ粗雑であり、私たちは今改良に取り組んでいます。

269
00:26:11,320 --> 00:26:15,960
Hub のリソースをクエリーする Shiny 版もあります。それはまだ開発中でまもなくアナウンスされるはずです。

270
00:26:16,760 --> 00:26:22,840
Rのクエリー関数は、用語のリストを取得し、検索条件に一致するリソースを返します。

271
00:26:22,840 --> 00:26:29,400
例えばここでは ensembl、gtf、release-103、そして homo sapiens でクエリーしたところ、

272
00:26:29,400 --> 00:26:35,640
それが4つの結果を返したことが分かるでしょう。興味のある ah_id を用いた角括弧1つの囲みは

273
00:26:35,640 --> 00:26:41,160
リソースに関する詳細情報を提供します。そして角括弧2重の囲みはリソースをダウンロードしてキャッシュします。

274
00:26:42,520 --> 00:26:47,240
Hub にデータを追加するための要件は、すでに存在するパッケージもしくは

275
00:26:47,240 --> 00:26:53,560
Bioconductorに投稿されるであろうパッケージが、データベースに追加されるであろうリソースのためのメタデータを持つ inst/metadata.csv と、

276
00:26:53,560 --> 00:26:59,800
次を示すファイルを持つ inst/script ディレクトリを含んでいることです。

277
00:26:59,800 --> 00:27:06,760
それはデータがどのように生成されたか、および関連するソース情報になります。

278
00:27:06,760 --> 00:27:13,000
コアパッケージである HubPub 中の vignette 「Creating A Hub Package: ExperimentHub or AnnotationHub」はこれをもっと詳しく説明しています。

279
00:27:13,800 --> 00:27:17,880
他の質問は hubs@bioconductor.org にeメールしていただけます。

280
00:27:18,520 --> 00:27:23,480
Hub は現在、コアチームからの多くのやり取りを含んでいます。

281
00:27:23,480 --> 00:27:29,080
私たちは、それをよりシンプルで簡単にするために、機能強化と再構築に取り組んでいます。

282
00:27:29,080 --> 00:27:35,160
それは限られたコアチームの意思疎通で Hub のデータを投稿そして維持するためにです。今のところ、データが Hub に投稿されると、コアチームメンバーが

283
00:27:35,160 --> 00:27:40,760
提供されたデータとメタデータを評価し、必要なら

284
00:27:40,760 --> 00:27:46,280
Bioconductorが提供する場所へのデータのアップロードを支援しています。今のところその場所は Amazon の S3 バケットですが変わる可能性はあります。

285
00:27:47,160 --> 00:27:51,640
また提供されたメタデータのデータベースを更新し、クエリー関数を使ってメタデータを利用できるようにもしています。

286
00:27:51,640 --> 00:27:57,560
さらなる Hub のコアチームによるメンテナンスには

287
00:27:57,560 --> 00:28:05,160
AmazonウェブサービスEC2インスタンスでのサーバーコードの管理が含まれます。それはウェブサイトや両方の Hub のAPIエンドポイントをホストするものです。

288
00:28:05,160 --> 00:28:11,880
また次に挙げる関連するコアパッケージの一般的なコアパッケージメンテナンスも含まれます。

289
00:28:11,880 --> 00:28:18,040
ExperimentHub、AnnotationHub、BiocFileCache、ExperimentHubData、AnnotationHubData そして HubPub といったものです。

290
00:28:19,880 --> 00:28:23,480
他にもまだコアチームに関連するタスクとインフラがまだありますが、

291
00:28:23,480 --> 00:28:29,000
それらに触れる時間がありませんでした。私たちが利用しているAmazonウェブサービスのリソースですとか、

292
00:28:29,000 --> 00:28:35,480
Microsoft の Azure プロジェクトのリソースといったようなものです。

293
00:28:35,480 --> 00:28:41,000
ですが恐らくこのトークによって、一般的なコアパッケージのヘルプと開発に加えて、コアチームがどれだけ多くのことをサポートしているかをみなさんに概説できたと思います。

294
00:28:42,840 --> 00:28:47,240
それでは、会議の主催者に私を招待してくれたことに感謝します。

295
00:28:47,240 --> 00:28:53,240
それはとても光栄なことです。また私の仲間のコアチームメンバーに感謝します。私はすべての仕事と努力に感謝します。

296
00:28:53,240 --> 00:28:58,280
私たちが皆、プロジェクトを前進させ続けることに力を注いでいます。

297
00:28:58,280 --> 00:29:04,120
そして、Bioconductor コミュニティのみなさんに心から感謝します。みなさんの貢献が無ければ Bioconductor の成功は無いでしょう。

298
00:29:04,120 --> 00:29:09,000
そして初めてのユーザーであろうと、長年の貢献者であろうと、

299
00:29:09,000 --> 00:29:16,200
あなたが Bioconductor を歓迎的で助けになるコミュニティだとを感じていただければ幸いです。それでは気軽に質問があれば送ってください。私のeメールか、

300
00:29:16,200 --> 00:29:34,840
コミュニティの Slack に。 どなたでもどんな質問でもこのプレゼンテーションについてのものがあれば。ありがとう みなさん !
