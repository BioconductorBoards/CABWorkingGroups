WEBVTT
Kind: captions
Language: ja

00:00:09.360 --> 00:00:15.360
こんにちは、みなさん。 BioC Asia 2021を楽しんでいらっしゃることと思います。&nbsp;

00:00:15.360 --> 00:00:19.920
本日は、カンファレンスの主催者から講演の招待をいただきありがとうございます。

00:00:19.920 --> 00:00:26.400
これはライブトークではありませんが私の初めてのキーノートトークでありとてもわくわくしています。今日の私のトークはBioconductorについてです。

00:00:26.400 --> 00:00:32.240
Bioconductorとは何か、そしてそのコアチームがBioconductorというプロジェクトをどのように支援しているかを紹介します。

00:00:32.240 --> 00:00:37.200
私が一般的なRおよびコンピューティングの会議に参加し始めたときに最初に驚いたのは、Bioconductorが単一のRパッケージであるという誤解でした。

00:00:37.200 --> 00:00:43.600
Bioconductorプロジェクトは、単一のパッケージではなく、それよりはるかに大きいものです。

00:00:43.600 --> 00:00:50.000
Bioconductorは、オープンソースおよびオープン開発のRパッケージリポジトリシステムです。

00:00:50.000 --> 00:00:56.480
それは遺伝学およびゲノミクスデータの分析、理解、および視覚化を中心に扱っています。

00:00:56.480 --> 00:01:01.680
Bioconductorには現在2000を超えるパッケージがあります。

00:01:01.680 --> 00:01:05.840
加えて専門的な実験やアノテーションのデータやワークフローもあります。それらはBioconductorのインターフェースを通じて利用できます。

00:01:07.200 --> 00:01:12.080
ただし、Bioconductorは単なるパッケージリポジトリシステムではありません。

00:01:12.080 --> 00:01:17.040
それは真に巧妙に築き上げられた組織です。多くの人が関わりプロジェクトの方向性を決めています。

00:01:17.040 --> 00:01:21.920
現在、「科学」「技術」「コミュニティ」の3つの主要な諮問委員会があります。

00:01:21.920 --> 00:01:26.880
科学諮問委員会は招待されたメンバーのみの委員会です。

00:01:26.880 --> 00:01:32.320
それはプロジェクトの科学的方向性に関する外部の助言と監視を提供します。

00:01:32.320 --> 00:01:36.320
一方コミュニティ諮問委員会は毎年春に委員会に加わるためのオープンな公開投票によって選出されます。

00:01:36.960 --> 00:01:41.440
技術諮問委員会はプロジェクトおよびパッケージレベルのインフラストラクチャについてアドバイスします。

00:01:41.440 --> 00:01:46.880
一方、コミュニティ諮問委員会はBioconductorコミュニティの発展、強化、および多様化に取り組んでいます。

00:01:46.880 --> 00:01:52.560
誰でもこれらの2つの委員会のポジションに立候補することができます。

00:01:52.560 --> 00:01:56.720
技術委員会の場合は、Bioconductorとプログラミングの知識や

00:01:56.720 --> 00:02:02.400
専門的な科学技術の背景があると便利かもしれません

00:02:02.400 --> 00:02:08.160
コミュニティ委員会は特に、人種、民族、教育レベルそしてBioconductorの経験の組み合わせを目指して、可能な限り多様化を図りたいと考えています。

00:02:08.160 --> 00:02:12.480
興味がある場合は、

00:02:12.480 --> 00:02:16.080
春先にBioconductorのサポートサイトとコミュニティSlackチャンネルで志願の募集を探してください。

00:02:18.320 --> 00:02:23.440
Bioconductorは単なる単一のパッケージではなくそれ以上のものであるという話に戻りましょう。

00:02:23.440 --> 00:02:28.960
Bioconductorはパッケージリポジトリであり組織でもありますが、さらに重要なのは、おそらく最も重要なことですが

00:02:28.960 --> 00:02:34.240
コミュニティであるということです。そのためBioconductorは次の目的のためにリソースやインフラを提供しようとがんばっています。

00:02:34.240 --> 00:02:39.040
それは経験豊富なパッケージメンテナ、開発者、およびユーザーを、

00:02:39.040 --> 00:02:44.000
経験の浅い人々とリンクさせ、この協力的で歓迎的なコミュニティを育成するためです。

00:02:44.000 --> 00:02:49.520
ではBioconductorユーザーはどのように、どこでコミュニティとつながるのでしょうか?

00:02:49.520 --> 00:02:55.760
それにはいくつかの異なる場所があります。注目すべきはBioconductorのサポートサイトとコミュニティSlackチャンネルそして

00:02:55.760 --> 00:03:00.960
数多く存在するカンファレンスワークショップとトレーニングイベントです。ワークショップとイベントは年を通じて起こっています。

00:03:00.960 --> 00:03:06.240
また新しく展開されたメンターシッププログラムもあります。私は今あなたにそれらそれぞれを簡単に說明できます。

00:03:08.320 --> 00:03:12.880
Bioconductorのサポートサイトは多くのユーザーが行く最初の場所です。 

00:03:12.880 --> 00:03:18.000
そこではBioconductorパッケージを用いた解析やトラブルシュートの質問をし、アドバイスをもらいます。

00:03:18.000 --> 00:03:22.480
このサポートサイトはBioconductorパッケージの質問に特化しています。そしてBioconductorにパッケージを提出したすべてのメンテナーは

00:03:22.480 --> 00:03:28.080
サポートサイトにサインアップする必要があります。もしメンテナーのパッケージ名でタグ付けされた質問が来たら

00:03:28.080 --> 00:03:32.880
メンテナーにはその通知が来るようになっています。サポートサイトには何千人ものユーザーがいます。

00:03:32.880 --> 00:03:39.120
サポートサイトはコミュニティの知識と経験を活用するための優れたリソースになりえます。パッケージのタグをクリックすると検索ができます。

00:03:39.120 --> 00:03:44.560
またはタグのタブに移動してパッケージを検索することもできます。そして既存の投稿や質問を見ることができます。

00:03:45.120 --> 00:03:49.120
もしあなたが必要とするものに関係のある何かが見つからなければ

00:03:49.120 --> 00:03:54.640
あなたは新しい質問を投稿できます。ask a questionタブをクリックすることでそれができます。

00:03:54.640 --> 00:03:59.840
有益なタイトルと質問に関連するパッケージのタグを投稿に付けるようにしてください。

00:04:00.720 --> 00:04:07.360
本文には Markdown もしくはプレーンテキストまたはHTMLを使用します。もし問題、コード実行のエラーがある場合

00:04:07.360 --> 00:04:12.640
できるだけ多くのコード例をコードセクションに含めてください。また必ずプラットフォームの情報、

00:04:12.640 --> 00:04:17.280
RとBioconductorのバージョンも含めてください。すると我々が回答を適切に調整できるので。

00:04:17.920 --> 00:04:23.040
Bioconductorチームはニュース機能を使って重要なアナウンスを投稿します。

00:04:23.040 --> 00:04:27.840
それはリリース、パッケージ、カンファレンス、選挙、およびその他のニュースイベントのためのものです。

00:04:29.840 --> 00:04:34.560
BioconductorコミュニティのSlackチャンネルもあります。私はみなさんにそのチャンネルに参加することをおすすめします。

00:04:34.560 --> 00:04:39.520
そこには多くの特定の議論に役立つチャンネルがあります。

00:04:39.520 --> 00:04:45.920
例えばマイクロバイオーム、メタボロミクス、プロテオミクスといったようなチャンネルがあります。

00:04:46.560 --> 00:04:50.560
後で説明するコアインフラストラクチャの部分について質問するチャネルもありますが、

00:04:50.560 --> 00:04:56.080
ビルドシステムの質問用のbioc-buildsや、

00:04:56.080 --> 00:05:03.280
experimenthub、annotationhub、またはbiocfilecacheの質問用のbiochubsなどのチャネルもあります。 

00:05:03.280 --> 00:05:08.080
年間を通じて多くのカンファレンス、ワークショップ、トレーニングイベントがあります。

00:05:08.080 --> 00:05:13.760
メインのウェブサイトにはBioconductorイベントカレンダーがあり、誰でもBioconductor関連のイベントを送信して宣伝できます。

00:05:13.760 --> 00:05:21.520
events@bioconductor.org に電子メールを送信するか

00:05:21.520 --> 00:05:27.360
まもなく利用可能になるフォーム版で、誰でもウェブページに含めるイベントを送信できます。

00:05:27.360 --> 00:05:32.240
イベントの最小要件はBioconductorとの関連性、およびBioconductor行動規範を守ることです。

00:05:33.120 --> 00:05:38.320
カンファレンスは常に楽しい時であり、コミュニティやネットワークの他のメンバーと会うための素晴らしい方法です。

00:05:38.320 --> 00:05:43.120
毎年恒例のイベントとなっている、このBioCAsiaを楽しんでいただければ幸いです。

00:05:43.680 --> 00:05:49.440
また、夏の終わりに米国で通常開催されるメインのBioCカンファレンスと、

00:05:50.160 --> 00:05:56.560
毎年恒例のEuroBioCカンファレンスがあり、現在予定されている次のカンファレンスは2022年3月です。

00:05:57.280 --> 00:06:02.800
近年、他の国でもBioconductorのイニシアチブが見られることに興奮しています。

00:06:02.800 --> 00:06:08.800
Bioconductorはその代表者をバイオインフォマティクスソフトウェア開発者のコミュニティの一部に喜んで送っています。

00:06:08.800 --> 00:06:15.200
具体的には毎年1週間にわたるメキシコとラテンアメリカの

00:06:15.200 --> 00:06:19.520
スペイン語でのカンファレンスやワークショップですとか 

00:06:19.520 --> 00:06:28.160
ワークショップやウェビナーのシリーズとして立ち上げられたH3ABioNetそしてH3Africaに代表者を送っています。

00:06:28.160 --> 00:06:33.840
アフリカの人がコーディングや研究を促進するのを助けるものです。

00:06:34.640 --> 00:06:39.120
これらはBioconductorが加わっている多くのワークショップやウェビナーそしてトレーニングの機会のほんの一部です。

00:06:39.120 --> 00:06:43.760
それらは年間を通じて世界中で立ち上げられており、

00:06:43.760 --> 00:06:49.360
Bioconductorコミュニティが成長し、私たちがワールドワイドな研究の一部になれていることに本当に興奮しています。

00:06:51.920 --> 00:06:55.920
ところでそれらはコミュニティとつながるすばらしいリソースですが、&nbsp;

00:06:55.920 --> 00:07:00.640
ちょっと前の組織のスライドに戻りたいと思います。なぜなら私たちはその最後のエントリーであるコアチームをスキップしたので。

00:07:00.640 --> 00:07:06.000
コアチームは、プロジェクトの機能において重要な役割を果たします。

00:07:06.000 --> 00:07:11.040
それは小さな特化された開発者のグループで、コアパッケージとプロジェクトレベルのインフラストラクチャの開発、保守、強化を支援します。

00:07:11.040 --> 00:07:16.320
それが本当に意味していることはどのようなことでしょうか? ほとんどの人は次のように考えていると思います。

00:07:16.320 --> 00:07:21.440
「コアチームはコアパッケージとパッケージメンテナンスだけ管理している」と。しかし実際には我々は

00:07:21.440 --> 00:07:27.120
それよりもっと多くのことを行っています。私たちはBioconductorがプロジェクトであることについて話しました。そこには多くのインフラストラクチャの要素があります。

00:07:27.120 --> 00:07:31.520
それらはプロジェクトを機能させるためにあります。それではそのリソースについて考えてみましょう。

00:07:31.520 --> 00:07:35.920
私たちは今しがたコアインフラストラクチャがコアチームが保守しているものに含まれることを見直しました。

00:07:38.320 --> 00:07:43.840
そんなわけでまずコアチームが更新と維持を行う責任があるものとしてメインのウェブサイト bioconductor.org があります。

00:07:43.840 --> 00:07:48.080
ウェブサイトは完全にコードベースで

00:07:48.080 --> 00:07:52.640
約20分毎に再生成され、常に最新の情報が確認できるようになっています。

00:07:53.280 --> 00:07:58.240
同様にサポートサイトのウェブサイトもコードベースです。ありがたいことに私たちは

00:07:58.240 --> 00:08:03.280
サポートサイトのモデルとしたBiostars、特にNatay Aberraからのサポートと助けを得ています。

00:08:03.280 --> 00:08:08.080
ですがサポートサイトの維持とメンテナンスにはコアチームが関与しています。

00:08:08.800 --> 00:08:12.000
またコミュニティSlackチャンネルに現れる質問を監視・解決してもいます。

00:08:12.000 --> 00:08:17.360
多くの場合に問題、コメント、懸念のフォローアップや調査につながっています。

00:08:18.160 --> 00:08:22.480
また、多くのコアチームメンバーがカンファレンスやワークショップの資料のプレゼンに参加しています。

00:08:23.040 --> 00:08:28.080
普通のカンファレンスのコンポーネントに関与している場合もあります。例えばワークショップをホストするための専用のウェブページですとか

00:08:28.080 --> 00:08:33.760
参加者のためのコンピューター環境を用意するなどです。そんな具合にもコアチームは

00:08:33.760 --> 00:08:40.160
管理や促進を助けています。そんなわけでみなさんはもうバックエンドのインフラストラクチャの重要性をお分かりになられたかと思います。

00:08:40.160 --> 00:08:46.000
続いて、ユーザーと開発者の2つの視点からBioconductorについて考えていきたいと思います。 

00:08:46.000 --> 00:08:50.160
これまでに私たちは付加的な重要なプロジェクトインフラについて議論してきました。

00:08:50.160 --> 00:08:55.520
それはコアチームがコミュニティにいい体験を提供するために維持と強化の発展を支援しているものです。

00:08:58.400 --> 00:09:02.960
それではユーザーがどのようにBioconductorとインタラクトするか考えてみましょう。

00:09:02.960 --> 00:09:08.000
従来ほとんどのユーザーはターミナルやRStudioを使っていたかと思います。それらは依然としてとても人気があり

00:09:08.000 --> 00:09:13.200
広く利用されていますが、より新しい利用可能なテクノロジーとプロジェクトがあります。たとえばDockerイメージですとか

00:09:13.200 --> 00:09:17.360
クラウドベースの新たな取り組みです。AnVILプロジェクトはターミナルやRStudioとは異なるユーザーエクスペリエンスを実現するものです。 

00:09:17.920 --> 00:09:23.040
ターミナルやRStudioのユーザー用にはCRANパッケージのBiocManagerがあります。

00:09:23.040 --> 00:09:28.640
それはCRANからインストールできすべてのBioconductorとCRANパッケージへのアクセスを提供します。

00:09:28.640 --> 00:09:35.600
Analysis Visualization and Informative Lab-spaceの略であるAnVILはNHGRI(訳注: 米国国立ヒトゲノム研究所)のプロジェクトです。

00:09:35.600 --> 00:09:40.320
それは分析用の安全なクラウドベースのコンピューティング環境を提供します。

00:09:40.320 --> 00:09:45.440
ここではAnVILとDockerイメージについて詳しくは説明しませんが、みなさんには次のNiteshのトークに参加されることをお勧めします。

00:09:45.440 --> 00:09:49.920
そこではAnVILのコンセプトやリソースがカバーされていると思います。私の方ではAnVILについて次のことだけ述べます。

00:09:49.920 --> 00:09:53.920
それはAnVILのBioconductorパッケージは異なるインストール機能をもたらすということです。 

00:09:53.920 --> 00:10:00.000
それは Bioconductor の Docker イメージと AnVIL の計算環境で使うことに特化してデザインされています。AnVILの計算環境は 

00:10:00.000 --> 00:10:05.680
それは高速なバイナリパッケージのインストール方法を実現しています。なぜこれが重要かというといくつかのパッケージはコンパイルを必要とするからです。

00:10:05.680 --> 00:10:11.760
コンパイルには時間がかかりますが、バイナリパッケージはコンパイル済みなのでほぼ一瞬でインストールできるようになります。

00:10:11.760 --> 00:10:16.640
ただバイナリパッケージの制約はそのシステム構成に特化されているということです。

00:10:16.640 --> 00:10:19.840
それはバイナリパッケージが作られた環境でしか動きません。そんなわけでバイナリパッケージはDockerを用いた環境でしか利用できません。

00:10:23.600 --> 00:10:29.280
ユーザー、特に新規ユーザーにとってのもう1つの重要な概念は、関心のあるパッケージを見つける方法です。

00:10:29.280 --> 00:10:34.000
BiocManagerには、利用可能なすべてのパッケージのリストを表示する機能があります。

00:10:34.000 --> 00:10:39.680
または、検索語を使用してパッケージを見つけることもできます。ですがそれは事前知識を想定しています。

00:10:39.680 --> 00:10:44.800
biocViews ページとパッケージライディングページは、パッケージを見つけるのに非常に役立ちます。

00:10:45.520 --> 00:10:50.640
bioconductor.org ホームページから離れます。利用可能なソフトウェアパッケージへのリンクがあります。

00:10:50.640 --> 00:10:56.400
このリンクは私たちが「biocViews」と呼んでいるページへあなたを連れていきます。そしてそれは「software」「annotation」「experiment」

00:10:56.400 --> 00:11:01.920
加えて「workflow」パッケージを含んでいます。「books」パッケージという近日登場予定のカテゴリもあります。興味のある用語でもパッケージを検索できます。

00:11:01.920 --> 00:11:07.600
例えば single cell や proteomics といったものでパッケージのリストを取得できます。またもしあなたがパッケージ名を知っているなら

00:11:07.600 --> 00:11:11.920
それを明確に検索できます。例えば「GenomicRanges」や「SummarizedExperiment」といったように。

00:11:12.720 --> 00:11:18.240
「Rank」の順は最もダウンロードされたものからわずかにしかダウンロードされていないものへの順になっています。パッケージ名をクリックすると

00:11:18.240 --> 00:11:23.840
Bioconductorのパッケージランディングページへ導かれます。そのページはパッケージの健全性などを示すバッジを持っています。

00:11:23.840 --> 00:11:30.320
またパッケージについての情報も持っています。例えば説明、ドキュメンテーション、

00:11:30.320 --> 00:11:35.920
パッケージ依存、または逆依存といったものです。また最後尾にはBiocManagerを使わずにパッケージを直接ダウンロードするためのリンクと

00:11:35.920 --> 00:11:43.040
git.bioconductor.org 中のコードベース、そしてパッケージダウンロード統計にアクセスするためのリンクがあります。

00:11:43.040 --> 00:11:49.120
このページでおそらくもっとも有用なのはパッケージのドキュメンテーションです。

00:11:49.120 --> 00:11:55.840
それはユーザーがパッケージをダウンロードする前にざっと目を通し、そのパッケージがユーザーの解析のタイプに合っているかを確認できるようになっています。

00:11:56.480 --> 00:12:00.240
それでは開発者の視点にスイッチする前に、

00:12:00.240 --> 00:12:04.720
コアチームと、ユーザーにとってどんな類のインフラがバックグラウンドで必要とされるかを再検討してみましょう。

00:12:05.280 --> 00:12:10.800
そこには明らかにいくつかのパッケージメンテナンス作業があります。 BiocManager に関するもの、AnVIL 固有のもの、

00:12:10.800 --> 00:12:17.040
biocViewsのパッケージに関するものといったようにです。すべてのBioconductorパッケージにはデイリービルドの概念があります。

00:12:17.040 --> 00:12:22.880
そのためパッケージはBiocManager::install関数で利用できるようになっているのです。

00:12:22.880 --> 00:12:28.400
Docker イメージの生成と維持もあります。 Bioconductor のDocker イメージは release と develop ブランチの両方のものがあり、 

00:12:28.400 --> 00:12:32.560
さらには AnVIL プラットフォームに提出する必要がある AnVIL 固有の Docker イメージがあります。

00:12:33.600 --> 00:12:38.320
また AnVIL::install を使って提供されるパッケージのバイナリパッケージ生成もあります。

00:12:38.320 --> 00:12:42.880
その上ウェブサイトのコードとウェブサイトのインタラクションもあります。

00:12:42.880 --> 00:12:48.160
それによってあなたは biocViews のパージとパッケージランディングページを見ることができているわけです。

00:12:48.160 --> 00:12:52.560
また定期的なウェブサイトの再生成は、その情報を時代遅れにせず最新状態で居続けることを確かにしています。

00:12:53.440 --> 00:12:57.440
また、パッケージのランディングページの最後尾で簡単に説明しましたが、

00:12:57.440 --> 00:13:02.960
パッケージごとに算出されるダウンロード統計もあります。繰り返しになりますが

00:13:02.960 --> 00:13:08.080
些細で基本的な機能に見える一方で

00:13:08.080 --> 00:13:12.320
すべてが適切に機能し適切にインタラクトするには、舞台裏で行う必要のあることが大量にあることがお分かりになるかと思います。

00:13:15.040 --> 00:13:19.680
コアチームはあるパッケージのサブセットを持っています。それは「コアパッケージ」と考えられ、

00:13:19.680 --> 00:13:24.320
「コアチームによってメンテされている」ものです。ですがBioconductorのほとんどのパッケージはコミュニティの貢献によるものです。

00:13:24.880 --> 00:13:29.200
コミュニティの誰もが Bioconductor パッケージを開発して提出することを歓迎します。

00:13:29.200 --> 00:13:33.520
開発時に実装する必要がある特定のパッケージ要件があり、パッケージはレビュープロセスを受けます。
パッケージを開発する場合いくらかの必要条件があります。

00:13:33.520 --> 00:13:37.840
そしてパッケージはレビュープロセスに経ます。一旦パッケージがアクセプトされると、

00:13:37.840 --> 00:13:42.320
それはデイリービルダーに追加され、BiocManagerを使ってインストールできるようになります。

00:13:44.720 --> 00:13:50.160
パッケージの必要条件は contributions.bioconductor.org で見つけることができます。

00:13:50.160 --> 00:13:55.120
また メインウェブサイトの developer セクションでも見つけることができます。

00:13:55.120 --> 00:14:00.480
現在 そのウェブサイトの developer セクションから contributions.bioconductor.org に情報を動かしている最中です。

00:14:00.480 --> 00:14:03.440
ですので最終的にすべての情報は1カ所にあるようになります。

00:14:04.400 --> 00:14:09.200
パッケージを開発する時に実装する義務があるいくつかのキーコンセプトを見直してみましょう。

00:14:10.000 --> 00:14:15.520
重要なことの1つは再利用もしくは既存クラスの拡張そして

00:14:15.520 --> 00:14:21.280
特定のデータタイプ用のimportとexportのメソッドがよく開発されているものを使うことです。Bioconductor は相互運用性の概念を持っており、

00:14:21.280 --> 00:14:26.640
そのためあるユーザーが1つのパッケージを使い、異なるパッケージでノーマライズを行い、3つ目で可視化を行いたい場合、

00:14:26.640 --> 00:14:32.800
1つのパッケージから次のパッケージへのデータの操作は、もし完全に排除されていないなら最小限に留めるべきです。

00:14:32.800 --> 00:14:38.800
理想的には一方のパッケージの出力がもう一方のパッケージへの入力であるべきです。

00:14:38.800 --> 00:14:45.200
これが、私たちが既存のクラス構造の使用または拡張を強調したい理由です。

00:14:45.200 --> 00:14:51.200
言及する価値がある別のグッドプラクティスは、可能ならウェブベースデータのキャッシュを作ることです。これはあるユーザーがインターネットが使えない、もしくは

00:14:51.200 --> 00:14:57.600
あるウェブサイトから同じファイルにリクエストする、もしくはウェブサイトが一時的に利用できない場合に

00:14:57.600 --> 00:15:03.120
再ダウンロードの必要が無く、前にダウンロードしたバージョンを

00:15:03.120 --> 00:15:09.760
インターネットの復帰やデータの再ダウンロードを待つことなく使えるようにする可能性を秘めています。さらに別のグッドプラクティスはユニットテストの実装です。

00:15:09.760 --> 00:15:15.120
テストは面倒に思えるかもしれませんがそれを強くお勧めします。もしテストを開発プロセスに早めに追加すると

00:15:15.120 --> 00:15:20.800
それは意外と開発に役立ち得ます。そんなわけでエッジケースなどをテストしたり

00:15:20.800 --> 00:15:27.360
ポジ・ネガの両方のテストをしたりすると正常な機能を確保できます。

00:15:27.360 --> 00:15:32.720
加えてBioconductorが要求する大きなことは、実行可能な例を伴う実に詳細な vignette です。

00:15:32.720 --> 00:15:38.320
vignette はパッケージがビルドされる時にコンパイルされます。そのため、 vignette はコードが適切に機能するかを保証するのにも役立ちます。

00:15:38.320 --> 00:15:44.240
理想的には vignette がユーザーにそのパッケージとその固有の機能の理解を与えてくれるので、私たちは詳細な vignette を好みます。

00:15:44.240 --> 00:15:49.280
これらはあなたが contributions.bioconductor.org ページで見つけるであろう多くのコンセプトの内のほんの一部にすぎません。

00:15:49.280 --> 00:15:56.320
ひとまずパッケージが開発されるとユーザーは

00:15:56.320 --> 00:16:01.680
GitHub上のBioconductorの新投稿トラッカーにそれを投稿します。そのホームページにはいくつかの有用な情報があります。

00:16:01.680 --> 00:16:06.160
それは何を期待するか、ですとか どのように関連するもしくは依存するパッケージをどのように投稿するか、といったものです。

00:16:06.160 --> 00:16:12.240
新しいイシューを投稿するには、 Bioconductor/Contributions 下で「New issue」開くように移動してください。

00:16:12.240 --> 00:16:18.480
そのタイトルはあなたのパッケージ名である必要があります。すべてのパッケージは今のところGitHubのリポジトリの配置が必要です。

00:16:18.480 --> 00:16:23.840
そしてその場を指しつつリンク先のリポジトリが更新される必要があります。そしてパッケージがモデレーション段階待ちになります。

00:16:24.400 --> 00:16:29.760
そしてレビュアーがアサインされ、そのパッケージは私たちの git.bioconductor.org の場所に追加されます。

00:16:29.760 --> 00:16:36.560
そして3つのメジャーOSプラットフォーム Linux Mac Windows すべてでビルドがトリガーされます。

00:16:36.560 --> 00:16:41.360
一度パッケージが "ERROR" が無くビルド・チェックされたら、レビュアーはそのパッケージのより詳しいレビューを行います。

00:16:41.360 --> 00:16:46.560
そして Bioconductor パッケージの必要条件と一致するようにコメントや提案、また変更リクエストを提示します。

00:16:47.200 --> 00:16:51.760
レビュープロセスはコミュニティに開かれており、そこではオープンな意見交換があります。

00:16:51.760 --> 00:16:57.760
またそれは Bioconductor の行動規範によって統治されています。一旦パッケージがアクセプトされるとそれはナイトリーデイリービルダーに追加されます。

00:16:59.920 --> 00:17:06.320
Bioconductor はパッケージのソースコードのバージョン管理に git を使います。

00:17:06.320 --> 00:17:11.600
Bioconductor は git.bioconductor.org からのみビルドされます。そしてユーザーはこの場所に変更をプッシュしそれをパッケージユーザーに伝播させる必要があります。

00:17:11.600 --> 00:17:18.480
週に数回から毎日程度の頻度で Bioconductor のビルダーはパッケージのあるバージョンを git clone を実行し

00:17:18.480 --> 00:17:23.680
その後R CMD INSTALL、R CMD build、そして R CMD check を実行します。

00:17:23.680 --> 00:17:30.320
もしパッケージのinstall、build、checkがきちんと進み、変更に対する有効なバージョンアップがされていれば、

00:17:30.320 --> 00:17:34.880
そのパッケージは伝播し、BiocManager::install 関数を使って利用できるようになります。

00:17:35.600 --> 00:17:39.760
パッケージのメンテナーは、メインWebサイトの右下隅にマークされた「Build reports」からビルドレポートを得ることができます。

00:17:39.760 --> 00:17:44.320
このページはそのビルドがどの程度の頻度で行われるかを表示します。

00:17:45.120 --> 00:17:51.120
ビルドレポートのいずれかをクリックすると、全 Bioconductor パッケージと

00:17:51.120 --> 00:17:56.320
各ステージに至るまでのステータスのリストが表示されます。
ページのトップにはそれがいつ生成されたかを示すタイムスタンプがあり、

00:17:56.320 --> 00:18:02.400
それぞれのパッケージは Git のコミットのバージョンとビルダーがそのレポートのために使われた日付の情報を持っています。

00:18:02.400 --> 00:18:08.080
何らかのステージのインジケーターをクリックしてより多くの情報と結果を見ることができます。

00:18:09.840 --> 00:18:14.160
それではパッケージを投稿するために今説明したすべてのものに必要なインフラストラクチャは何でしょうか?

00:18:14.160 --> 00:18:19.040
パッケージガイドラインの評価と更新があるでしょう。

00:18:19.680 --> 00:18:23.840
また GitHub でのパッケージ投稿プロセスとインタラクトするコードもあるでしょう。

00:18:23.840 --> 00:18:28.000
そして3つの開発ビルダーのそれぞれの新投稿プロセスに固有のコードもあるでしょう。

00:18:28.960 --> 00:18:32.960
コアチームは今のところ新しい投稿に対するパッケージレビューにも参加しています。

00:18:34.480 --> 00:18:38.400
Bioconductor の Git のエコシステム全体の促進もあります。

00:18:38.400 --> 00:18:44.080
それは git.bioconductor.org や、すべての Bioconductor パッケージのメインのリポジトリの場所を含みます。

00:18:44.080 --> 00:18:50.240
GitContributions アプリはユーザーの ssh 証明書を管理するものです。

00:18:51.120 --> 00:18:57.280
Gitolite はどのユーザーがどのパッケージにアクセスできるようにするかを管理するアプリです。

00:18:57.280 --> 00:19:03.600
Git hooks は様々なトリガーイベントに反応するものです。また
BBS と呼ばれる Bioconductor Build System もあります。

00:19:03.600 --> 00:19:08.560
それはコアチームの一大仕事です。
そこでは最小限に6つのビルドマシンがあり、

00:19:08.560 --> 00:19:14.640
それはシステム管理と次のそれぞれをハンドルするための基本的なコードベースを必要とします。

00:19:14.640 --> 00:19:20.000
git clone、R CMD install、R CMD build、R CMD check、パッケージを伝播させること、そして

00:19:20.000 --> 00:19:25.920
ビルドレポートの生成です。そして最小限でも6つビルダーがある理由は

00:19:25.920 --> 00:19:32.560
Bioconductor の release と devel ブランチの両方用に、私たちは3つのOSプラットフォーム Mac、Linux そして Windowsをカバーしているからです。

00:19:35.280 --> 00:19:40.480
簡単に、Bioconductor に release と devel ブランチがある理由についても触れたいと思います。

00:19:40.480 --> 00:19:47.040
Bioconductor は R と密接に関連しています。
ほとんどの年の春に、R はリリースされます。

00:19:47.040 --> 00:19:51.200
その R のリリースの次に Bioconductor は更新する必要があります。どのバージョンのRがパッケージで継続して適切に機能するのを保証するためにです。

00:19:51.200 --> 00:19:56.960
Bioconductorには、春と秋 年に2つのリリースがあります。

00:19:57.600 --> 00:20:05.200
そこでは devel ブランチが「リリースされて」次の新しい release ブランチになります。ざっくりと4月末から5月始めにかけて

00:20:05.200 --> 00:20:10.480
新しいRのバージョンがリリースされるので、その Bioconductor の release と devel ブランチ両方は

00:20:10.480 --> 00:20:17.200
R の安定したバージョンもしくはパッチがあてられたバージョンを使うことになります。秋、通常は10月末か11月始めに

00:20:17.200 --> 00:20:22.960
Bioconductorは2番目のリリースを行います。
今のところ、その Bioconductor の release ブランチは

00:20:22.960 --> 00:20:29.440
引き続き安定した R と R のパッチがあたったバージョンを使います。 ですがその devel ブランチは R の devel バージョンを使うようにしています。

00:20:29.440 --> 00:20:35.200
次の春の R のリリースに備えるためです。devel ブランチを使用すると、メンテナーは

00:20:35.200 --> 00:20:41.440
base-r の変更だけでなく、被ることになるであろう他の依存パッケージの変更にも適応できるようになります。

00:20:41.440 --> 00:20:46.560
そしてエンドユーザーへの混乱やダウンタイムを最小限に抑えることができます。

00:20:46.560 --> 00:20:51.360
Bioconductor は、パッケージメンテナが開発ブランチで大きな変更を加えて、

00:20:51.360 --> 00:20:56.640
リリースブランチでの変更をマイナーなバグ修正に限定することを奨励しています。

00:20:56.640 --> 00:21:01.840
繰り返しになりますが、エンドユーザーに影響を与えることなく開発や破壊的変更を行える場所を設けたいという理由からです。

00:21:03.120 --> 00:21:08.000
コアチームは、リリース期間中はリリース関連のタスクで常に非常に忙しいです。

00:21:08.000 --> 00:21:14.560
それは最低6つのビルダーで R と Bioconductor のバージョンを更新すること、

00:21:14.560 --> 00:21:19.120
Bioconductorから廃止予定とされることや除去されることを避けるようにパッケージの修正を試みるためのビルド失敗の通知が無視されていることをメンテナーに伝えるeメール、

00:21:19.120 --> 00:21:24.720
新たに投稿されたパッケージのレビュー、

00:21:25.760 --> 00:21:31.280
注意を必要とするコアパッケージの修正または変更、リリース関連のアノテーションリソースの追加、

00:21:31.280 --> 00:21:37.680
新しいリリースのすべてのパッケージに対する git.bioconductor.org での新しいブランチの作成、

00:21:37.680 --> 00:21:43.840
そして、リリースアナウンスを生成するためのすべてのパッケージのNEWSファイルの照合などです。

00:21:45.280 --> 00:21:50.160
コアチームがメンテしている、最近人気が上昇している、また別の重要なインフラの要素があります。

00:21:50.160 --> 00:21:56.160
それは Bioconductor Hubs というコンセプトです。 具体的には AnnotationHub と ExperimentHub というものがあります。

00:21:56.160 --> 00:22:04.000
簡単な背景として、git は大きなファイルを許可せず、私たちの現在の git システムは git-lfs をサポートしていません。

00:22:04.000 --> 00:22:09.440
それは、ユーザーに大規模なデータセットを提供するための代替方法が必要であることを意味します。

00:22:10.240 --> 00:22:15.840
Bioconductorは、データを安全な公共または機関のサーバーでホストすることを主張しています。

00:22:15.840 --> 00:22:23.920
例えば Zenodo、Amazon S3 バケット、Microsoft Azure、他にも信頼できるサイト、もしくは

00:22:23.920 --> 00:22:32.000
もし可能なら GitHub や Dropbox などでデータをプライベートにホストするのではなく Ensemble や NCBI のようなウェブリソースなりデータベースへのダイレクトアクセスといったものです。

00:22:32.000 --> 00:22:37.600
もしあなたがパッケージを開発しているなら、私たちは他のプラットフォーム上でのデータホスティングについて議論するのをお勧めします。

00:22:37.600 --> 00:22:46.160
bioc-devel@r-project.org の開発者メーリングリストで議論していただけます。

00:22:46.800 --> 00:22:51.440
メンテナーがそのようなリソースにアクセスできない場合は、

00:22:51.440 --> 00:22:58.720
Bioconductor は Amazon S3 バケットを使ってもらえるようにしています。また一方で私たちは Amazon S3 から Microsoft Azure への場所の移行を積極的に調査しています。

00:22:58.720 --> 00:23:06.080
開発者は信頼できるサイトから直接リソースをダウンロードできますが、

00:23:06.720 --> 00:23:11.840
バックグラウンドでキャッシュメカニズムを実装する必要があります。

00:23:11.840 --> 00:23:18.640
そこで私たちは Bioconductor のコアパッケージ BiocFileCache を強くお勧めします。

00:23:18.640 --> 00:23:24.000
直接ダウンロードし、そしてBiocFileCacheを実装することの代替方法は、データを AnnotationHub もしくは ExperimentHub にデータを載せることです。

00:23:24.720 --> 00:23:29.680
AnnotationHub と ExperimentHub は、ダウンロードする外部データへの参照を持つデータベースです。

00:23:29.680 --> 00:23:36.560
Hub インターフェイスは、データベースにデータを含めるときに提供されるメタデータへのクエリメカニズムを提供します。

00:23:36.560 --> 00:23:42.560
ダウンロードに Hub インターフェイスを使う時、それはすでに

00:23:42.560 --> 00:23:48.800
BiocFileCache をキャッシングメカニズムとして使っています。そのためメンテナーはそれを自分で実装する必要はありません。

00:23:48.800 --> 00:23:54.800
Hub にデータを載せることの他の利点は、Rの外部または

00:23:54.800 --> 00:24:00.880
関連する Bioconductor パッケージの利用外のリソースの見つけやすさです。 Bioconductor のコアパッケージには

00:24:00.880 --> 00:24:05.920
ExperimentHub と AnnotationHub があり、それらは異なるタイプの、もしくは異なるソースからのデータをクエリーできます。

00:24:06.480 --> 00:24:11.760
リソースは、R内で実行されるクエリまたは

00:24:11.760 --> 00:24:17.840
annotationhub.bioconductor.org もしくは experimenthub.bioconductor.org での Hub の API を用いた調査のいずれかで検索できます。

00:24:19.120 --> 00:24:24.320
そのAPIは認めざるを得ないことですがまだ粗雑であり、私たちは今改良に取り組んでいます。

00:24:24.320 --> 00:24:28.960
Hub のリソースをクエリーする Shiny 版もあります。それはまだ開発中でまもなくアナウンスされるはずです。

00:24:29.760 --> 00:24:35.840
Rのクエリー関数は、用語のリストを取得し、検索条件に一致するリソースを返します。

00:24:35.840 --> 00:24:42.400
例えばここでは ensembl、gtf、release-103、そして homo sapiens でクエリーしたところ、

00:24:42.400 --> 00:24:48.640
それが4つの結果を返したことが分かるでしょう。興味のある ah_id を用いた角括弧1つの囲みは

00:24:48.640 --> 00:24:54.160
リソースに関する詳細情報を提供します。そして角括弧2重の囲みはリソースをダウンロードしてキャッシュします。

00:24:55.520 --> 00:25:00.240
Hub にデータを追加するための要件は、すでに存在するパッケージもしくは

00:25:00.240 --> 00:25:06.560
Bioconductorに投稿されるであろうパッケージが、データベースに追加されるであろうリソースのためのメタデータを持つ inst/metadata.csv と、

00:25:06.560 --> 00:25:12.800
次を示すファイルを持つ inst/script ディレクトリを含んでいることです。

00:25:12.800 --> 00:25:19.760
それはデータがどのように生成されたか、および関連するソース情報になります。

00:25:19.760 --> 00:25:26.000
コアパッケージである HubPub 中の vignette 「Creating A Hub Package: ExperimentHub or AnnotationHub」はこれをもっと詳しく説明しています。

00:25:26.800 --> 00:25:30.880
他の質問は hubs@bioconductor.org にeメールしていただけます。

00:25:31.520 --> 00:25:36.480
Hub は現在、コアチームからの多くのやり取りを含んでいます。

00:25:36.480 --> 00:25:42.080
私たちは、それをよりシンプルで簡単にするために、機能強化と再構築に取り組んでいます。

00:25:42.080 --> 00:25:48.160
それは限られたコアチームの意思疎通で Hub のデータを投稿そして維持するためにです。今のところ、データが Hub に投稿されると、コアチームメンバーが

00:25:48.160 --> 00:25:53.760
提供されたデータとメタデータを評価し、必要なら

00:25:53.760 --> 00:25:59.280
Bioconductorが提供する場所へのデータのアップロードを支援しています。今のところその場所は Amazon の S3 バケットですが変わる可能性はあります。

00:26:00.160 --> 00:26:04.640
また提供されたメタデータのデータベースを更新し、クエリー関数を使ってメタデータを利用できるようにもしています。

00:26:04.640 --> 00:26:10.560
さらなる Hub のコアチームによるメンテナンスには

00:26:10.560 --> 00:26:18.160
AmazonウェブサービスEC2インスタンスでのサーバーコードの管理が含まれます。それはウェブサイトや両方の Hub のAPIエンドポイントをホストするものです。

00:26:18.160 --> 00:26:24.880
また次に挙げる関連するコアパッケージの一般的なコアパッケージメンテナンスも含まれます。

00:26:24.880 --> 00:26:31.040
ExperimentHub、AnnotationHub、BiocFileCache、ExperimentHubData、AnnotationHubData そして HubPub といったものです。

00:26:32.880 --> 00:26:36.480
他にもまだコアチームに関連するタスクとインフラがまだありますが、

00:26:36.480 --> 00:26:42.000
それらに触れる時間がありませんでした。私たちが利用しているAmazonウェブサービスのリソースですとか、

00:26:42.000 --> 00:26:48.480
Microsoft の Azure プロジェクトのリソースといったようなものです。

00:26:48.480 --> 00:26:54.000
ですが恐らくこのトークによって、一般的なコアパッケージのヘルプと開発に加えて、コアチームがどれだけ多くのことをサポートしているかをみなさんに概説できたと思います。

00:26:55.840 --> 00:27:00.240
それでは、会議の主催者に私を招待してくれたことに感謝します。

00:27:00.240 --> 00:27:06.240
それはとても光栄なことです。また私の仲間のコアチームメンバーに感謝します。私はすべての仕事と努力に感謝します。

00:27:06.240 --> 00:27:11.280
私たちが皆、プロジェクトを前進させ続けることに力を注いでいます。

00:27:11.280 --> 00:27:17.120
そして、Bioconductor コミュニティのみなさんに心から感謝します。みなさんの貢献が無ければ Bioconductor の成功は無いでしょう。

00:27:17.120 --> 00:27:22.000
そして初めてのユーザーであろうと、長年の貢献者であろうと、

00:27:22.000 --> 00:27:29.200
あなたが Bioconductor を歓迎的で助けになるコミュニティだとを感じていただければ幸いです。それでは気軽に質問があれば送ってください。私のeメールか、

00:27:29.200 --> 00:27:47.840
コミュニティの Slack に。 どなたでもどんな質問でもこのプレゼンテーションについてのものがあれば。ありがとう みなさん !

00:28:59.760 --> 00:29:00.260
 

